// auto generate by generator
package openapi

import (
	"github.com/gin-gonic/gin"
    log "github.com/sirupsen/logrus"
    "net/http"
	"strings"
    "gitlab.com/avarf/getenvs"
  )  

// "header", "query" or "cookie"
func {{.SchemeName}}_Auth(c *gin.Context){	
		// {{.Description}}
		apikeyname := "{{.Name}}"
		{{ if eq .In "cookie"}}
		keyvalue , _ := c.Request.Cookie(apikeyname)		
		{{else if eq .In "query"}}
		keyvalue := c.Request.URL.Query().Get(apikeyname)
		{{else}}
		keyvalue := c.Request.Header.Get(apikeyname)
		{{end}}
		
	
		if verifyKey_{{.SchemeName}}(apikeyname, keyvalue) ==false {
			log.Warn("Wrong API Key:", apikeyname)
			c.JSON(http.StatusUnauthorized, gin.H{"status": http.StatusUnauthorized, "message": "API Key "+apikeyname+" authentication failed"})
			c.Abort()
		}	
}




func verifyKey_{{.SchemeName}}(keyname string, keyvalue string) bool {
	emptyvalue:="----"
	environmentkeyname := strings.Replace(keyname, "-", "_", -1)
	envkeyvalue := getenvs.GetEnvString(environmentkeyname, emptyvalue)

	// log.Info("key: ",keyname,", environmentkeyname: ", environmentkeyname, ": ",envkeyvalue)

	if envkeyvalue == emptyvalue {
		log.Error("Undefine environment variable "+keyname)
	}
	if envkeyvalue == keyvalue {
		return true
	} else {
		return false
	}
}
