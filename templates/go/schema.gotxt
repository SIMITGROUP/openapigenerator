package openapi

import validation "github.com/go-ozzo/ozzo-validation/v4"

type {{ .ModelName}} struct {
	{{ range .FieldList}}{{.FieldName}} {{if eq .FieldType  "array"}}[]{{.ChildItemType}}{{else}}{{.FieldType}}{{end}} `json:"{{.ApiFieldName}}"` //{{.Description}}
	{{end}}
}

type {{.InterfaceName}} interface{
	{{ range .FieldList}}
	Get{{.FieldName}}()
	Set{{.FieldName}}({{if eq .FieldType  "array"}}[]{{.ChildItemType}}{{else}}{{.FieldType}}{{end}}){{end}}
}
{{ range .FieldList}}
func (obj {{.ModelName}}) Get{{.FieldName}}() {{if eq .FieldType  "array"}}[]{{.ChildItemType}}{{else}}{{.FieldType}}{{end}}{
	return obj.{{.FieldName}}
}
func (obj {{.ModelName}}) Set{{.FieldName}}(val {{if eq .FieldType  "array"}}[]{{.ChildItemType}}{{else}}{{.FieldType}}{{end}}){
	obj.{{.FieldName}}= val
}{{end}}

func (obj {{.ModelName}}) Validate() error {
	return validation.Errors{
		//"name": validation.Validate(m.Name, validation.Required, validation.Length(5, 20)),
		//"email": validation.Validate(m.Name, validation.Required, is.Email),
		//"zip": validation.Validate(m.Address.Zip, validation.Required, validation.Match(regexp.MustCompile("^[0-9]{5}$"))),
	}.Filter()
}

func (obj {{.ModelName}}) GetExamples() {{.ModelName}} {
	example:= {{.ModelName}}{
		{{ with .FieldList}} {{range .}}
		{{.FieldName}}: {{.Example}},{{end}}{{end}}
	}
	return example
}
