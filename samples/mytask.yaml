openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/KSTAN/FirstApi/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: My Task API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: public
    description: no security requirements
  - name: private
    description: private api require secret key
paths:
  /:
    get:
      summary: welcome
      operationId: getWelcomeMsg
      tags:
        - public
      description: provide welcome msg with json format
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      summary: welcome
      operationId: postWelcomeMsg
      tags:
        - public
      description: provide welcome msg with json format
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /task:
    get:
      security:
        - APIKey: []
      summary: provide list of tasks
      operationId: getTaskList
      description: provide task in array format
      tags:
        - private
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
    put:
      security:
        - APIKey: []
      summary: create new task
      operationId: createTask
      description: create task and return task data
      tags:
        - private
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /task/{task_id}:
    parameters:
      - $ref: '#/components/parameters/TaskID'
    delete:
      security:
        - APIKey: []
      summary: delete task
      operationId: deleteTask
      description: delete task and return msg
      tags:
        - private
      responses:
        '200':
          description: successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    get:
      security:
        - APIKey: []
      summary: get task
      operationId: getTask
      description: get task by id, return task
      tags:
        - private
      responses:
        '200':
          description: successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    post:
      security:
        - APIKey: []
      summary: update task
      operationId: updateTask
      description: update task by id, return latest task info
      tags:
        - private
      responses:
        '200':
          description: successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
components:
  securitySchemes:
    APIKey:
      type: apiKey
      in: header
      name: SECRETKEY
  
  parameters:
    TaskID:
      name: task_id
      in: path
      required: true
      schema:
        type: integer
        format: int32
        example: 100
  schemas:
    Message:
      type: object
      properties:
        msg:
          type: string
          example: openapi3.0 welcome you
    Task:
      type: object
      properties:
        taskid:
          type: integer
          format: int32
          example: 100
        tasktitle:
          type: string
          example: task 1
        created:
          type: string
          format: date-time
          example: 2022-01-01 10:00:00
        description:
          type: string
          example: This is long description
    TaskList:
      type: array
      items:
        $ref: '#/components/schemas/Task'