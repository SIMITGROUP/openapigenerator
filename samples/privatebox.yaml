openapi: 3.0.3
info:
  version: '1.0.0'
  title: 'Private Box API (OpenAPI 3.0)'
  license:
    name: Private Box Limited
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/privat6248/PrivateBoxAPI/1.0.0
  - url: "https://staging-api.privatebox.co.nz/v1"
    description: Staging Server
  - url: "https://api.privatebox.co.nz/v1"
    description: Production Server
components:
  responses:
    ResultsResponse:
      description: Result page information
      content:
        application/json:
          schema:
            type: object
            properties: 
              total: 
                type: integer
                description: Total number of results 
              per_page: 
                type: integer
                description: The number of results to show per page
              current_page: 
                type: integer
                description: What page these results are on
              last_page: 
                type: integer
                description: The last possible page available
              from: 
                type: integer
              to:
                type: integer
            example: 
              total: 50
              per_page: 15
              current_page: 1
              last_page: 4
              first_page_url: "https://api.privatebox.co.nz/endpoint?page=1"
              last_page_url: "https://api.privatebox.co.nz/endpoint?page=4"
              next_page_url: "https://api.privatebox.co.nz/endpoint?page=2"
              prev_page_url: null
              path: "https://api.privatebox.co.nz/endpoint"
              from: 1
              to: 15
  parameters:
    SortOrderParam:
      name: sort_by_order
      in: query
      description: "Return results in [asc]ing or [desc]ending order. Optional. Default is ascending order"
      schema:
        type: string
        enum: ["asc","desc","none"]
        default: desc
        example: ""
      required: false
    SortFieldParam:
      name: sort_by_field
      in: query
      description: "What field to sort on. Optional." 
      schema:
        type: string
        enum: [created_at, id, weight, type]
        example: created_at
      required: false
    ItemsPerPageParam:
      name: items_per_page
      description: How records to return per page of results.
      schema:
        type: integer
        default: 10
      in: query
      required: false
    PageParam:
      name: page
      description: Which page to return
      schema:
        type: integer
        default: 1
      in: query
      required: false
    SearchParam:
      name: search
      description: Search for particular text on page
      schema:
        type: string
      in: query
      required: false
    DeviceIDInHeader:
      in: header
      name: X-DeviceID
      description: An UUID of this application on this device. If a unrecognised device_id is supplied for this user then the one time code (OTC) will be required. This id will be used by Firebase FMC for notifications. 
      schema: 
        type: string
      required: true
      example: 2bad7257-10b6-457d-8e04-07c35907e35b
  schemas:
    ArrayOfScannedItems:
      type: array
      items:
        $ref: "#/components/schemas/ScannedItem"    
    ScannedItem:
      type: object
      properties:
        id: 
          type: integer
          description: Unique scan ID
        scanned_date: 
          type: string
          format: date-time
          description: Date & Time when this item was scanned (NZT)
        details: 
          $ref: '#/components/schemas/Item'
        url: 
          type: string
          description: Authenticated string from Amazon S3 to view the document. 
        url_expires: 
          type: integer
          description: How long the link is valid for in seconds. Default is 1800 (30 mins). Minimum 1 second. Maximum is 604800 (1 week)
          minimum: 1
          default: 1800
          maximum: 604800
      example: 
        id: 54662
        scanned_date: 2022-06-21T15:32:28+12:00
        details: 
          id: 54662
          weight: 23
          type: Letter
          from: 
            text: ASB BANK, AUCKLAND
            name: ASB
          status: Arrived
          scan_status: Completed
          to: Bugs Bunny
        url: https://privatebox-public.s3.ap-southeast-2.amazonaws.com/images/logo.png
    ArrayOfItems:
      type: array
      items:
        $ref: "#/components/schemas/Item"
      example:
        - id: 54661
          weight: 802
          type: Large Document
          status: Arrived
          scan_status: Queued
          from:
            text: CAMPING & CARAVANS MAG
          to: Bugs Bunny
        - id: 54662
          weight: 1300
          type: Parcel
          status: Arrived
          scan_status: Queued
          from: 
            text: AMAZON
            name: Amazon
          to: Doc. Whats Up
        - id: 54662
          weight: 23
          type: Letter
          from: 
            text: ASB BANK, AUCKLAND
            name: ASB
          status: Arrived
          scan_status: Completed
          to: Bugs Bunny
    CollectLocation:
      type: object
      properties:
        id: 
          type: integer
          description: Unique ID for this collection location
        company_name: 
          type: string
          description: Name of the business at this location
        lat: 
          type: number
          description: Lattitude of location
        lng: 
          type: number
          description: Longatude of location
        phone: 
          type: string
          format: phone
          description: Phone number for business (if available)
        full_address: 
          type: string
          description: Full text of the location
        partner: 
          type: string
        hours:
          type: array
          items: 
            type: object
            properties:
              day: 
                type: integer
              open: 
                type: string
              close: 
                type: string
        address_line_1: 
          type: string
        suburb: 
          type: string
        city: 
          type: string
        post_code: 
          type: string
    Item:
        type: object
        properties:
            id:
                type: integer
                description: Unique ID for this item
            weight:
                description: Weight in grams
                type: integer
            date_received:
                description: Date the item was received at Private Box
                type: string
                format: date
            type:
                type: string
            from:
                $ref: "#/components/schemas/Sender"
            status:
                type: string
                description: A mail item can be Arrived, Queued, Destroyed, Sent or Picked Up
            scan_status: 
                type: string
                description: The items scan status. Can be queued, scanning, uploading, complete, unscannable. Can have no value (eg. not queued for scanning), 
            queue: 
              type: string
              description: Shows what queue this item is in eg. Send, Destroy, Pickup, RTS (Return to sender), Collect. Can be have no value (eg. no order pending for this item)
            actioned_date:
                type: string
                description: The date this mail item was actioned. 
                format: date
            flags:
                type: array
                items:
                    type: string
            to:
                type: string
                description: Who the mail was addressed to (the receivers name)
        example: 
          id: 123456
          weight: 20
          type: Letter
          status: Arrived
          scan_status: queued
          flags:
            - "Important"
          to: B Bunny
    MailFolder:
        type: object
        properties:
            id:
                type: integer
                description: Unique ID for this mail MailFolder
            name: 
                type: string
                description: What this mail folder is called
            autoscan:
                type: boolean
                description: Automatically scan items in this folder when they arrive Private Box
            destroy_after_scan:
                type: boolean
                description: Will automatically destroy this item if scan is successful
            auto_forward: 
              type: object
              description: "If set, describes the auto forwarding rule that applies to mail in this folder"
              properties:
                destination:
                  $ref: "#/components/schemas/Address"
                when:
                  $ref: "#/components/schemas/Frequency"                
                service:
                  $ref: '#/components/schemas/ServiceOption'
                receivers_name: 
                  type: string
                  description: Name of the person receiving this mail item
        example: 
          id: 9213
          name: Catch All
          autoscan: true
          destroy_after_scan: true
          auto_forward: 
            destination: 
              address: 132 My Street
              suburb: Kingston
              city: New York
              state: NY
              post_code: 12401
              country: 
                iso: US
                printable_name: United States of America
                name: UNITED STATES OF AMERICA
            when: 
              id: 5
              name: Daily
            service: 
              id: 16
              code: air
              name: Air Mail
            receivers_name: Mr John Smith
    MailBox:
        type: object
        properties:
            id:
                type: integer
                description: Unique ID for this mail box
            name: 
                type: string
                description: What this mail box is called
            default_address:
                $ref: "#/components/schemas/Address"
            type:
                type: string
                description: The type of mail box this is. It could be Personal, Business or Premium.
                enum: ["Personal","Business","Premium"]
        example: 
          id: 1234
          name: Suite 1234
          default_address: 
            address: 6 Johnsonville Road
            address_details: Level 1
            suburb: Johnsonville
            city: Wellington
            post_code: 6037
          type: Business
    Address: 
      type: object
      properties:
        id: 
          type: integer
          description: Unique ID for this address
        address: 
          type: string
          description: The street or PO Box address
        address_detail: 
          type: string
          description: Address details. Such as Suite, Level, Building name etc. 
        suburb: 
          type: string
          description: The name of the local area
        city: 
          type: string
          description: The name of the city
        country: 
          $ref: "#/components/schemas/Country"
        post_code: 
          type: string
          description: The postcode or zip 
        rural_number: 
          type: integer
          description: Rural delivery number. Only required for RD in New Zealand. 
      example: 
        id: 99281
        address: 15 Beaumonts Way
        address_detail: Unit 15
        suburb: Manurewa
        city: Auckland
        post_code: 2102
    Sender: 
        type: object
        properties: 
            text:
                type: string
                description: The raw sender text
            name:
                type: string
                description: The senders name (if known)
        example: 
          text: ASB BANK
          name: ASB
    Country:
      type: object
      properties:
        iso:
          type: string
          description: ISO code (2 char) for this country
        printable_name: 
          type: string
          description: The printable name of this country
        name:
          type: string
          description: The official name of this country
      example: 
        iso: NZ
        printable_name: New Zealand
        name: NEW ZEALAND
    User:
      type: object
      properties: 
        id: 
          type: integer
          description: Unique ID for this user
        email: 
          type: string
          format: email
          description: Email address for this user
        notifications:
          $ref: '#/components/schemas/Notifications'
        first_name:
          type: string
          description: Users firstname
        last_name:
          type: string
          description: Users lastname
        mobile: 
          type: string
          format: phone
          description: Users mobile phone number          
      example: 
        id: 1
        email: void+demo@privatebox.co.nz
        first_name: Bugs
        last_name: Bunny
        mobile: "+64 12 345 6789"
    Notifications:
      type: array
      items: 
        type: object
        properties: 
          trigger: 
            type: string
            description: Name of the trigger. Valid options are  "mail_is_received","mail_is_scanned", "mail_is_sent","mail_is_ready_for_collection"
          action: 
            type: string
            description: What action to take when the trigger occurs. Valid options are "never", "mobile", "email", "mobile_email"
        required: 
          - trigger
          - action
      example: 
        - trigger: mail_is_received
          action: mobile
        - name: mail_is_scanned
          action: "email"
    Frequency: 
      type: object
      description: "How often mail should be auto-forwarded"
      properties:
        name: 
          type: string
          description: "Text description of this frequency"
          enum: ["Hold", "Daily", "Weekly", "Every 2 weeks", "Every 4 weeks"]
        id: 
          type: integer
          description: "Unique ID for this frequency setting"
      example: 
        name: Daily
        id: 5
    ServiceOption:
      type: object
      description: "You can send mail using different providers. Each provider has one or more service options that you use to send mail to a selected country"
      properties:
        name: 
          type: string
          description: "Description of this service"
          example: Courier
        id: 
          type: integer
          description: "Unique ID for this service"
          example: 23
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          example: 400
          type: integer
        message:
          type: string
          example: Bad request - Missing a required parameters
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
security:
  - BearerAuth: []
paths:
  /login:
      post:
        summary: Get an authenticated token
        description: Obtain a token for a valid user
        parameters: 
          - $ref: '#/components/parameters/DeviceIDInHeader'
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            email: 
                                type: string
                                description: The email address (or username) of the user you obtaining an API token for. Each token is valid for 1 year from issue date. The user can revoke tokens via their login at https://secure.privatebox.co.nz
                            password: 
                                type: string
                                description: The password for the user
                            token_name: 
                                type: string
                                description: The name of the token. The user will be able to see a list of their tokens (and revoke tokens) via our web application
                        example:
                          email: bugsbunny@disney.com
                          password: ILoveCarrots
                          token_name: "Bugs Bunny's iPhone 12"
        responses: 
            200:
                description: The response for a successful login attempt via the API
                content:
                    application/json:
                        schema:
                          type: object
                          properties:
                            token:
                              type: string
                              example: "nsLp7pTdjhZ0xta6z4ZLE8jQMuWar15MxvwGF9CKvDRWAvw2hvrisI0HD3TX"
                              minLength: 30
                              maxLength: 60
                            verification_required:
                              type: boolean
                              example: true
                              description: Whether or not the user was emailed a code to verify their login attempt
            400:
              description: The request submitted is missing required parameters
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
            401:
              description: Credentials are incorrect, or account is not longer valid
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"

  /user:
    parameters: 
      - $ref: '#/components/parameters/DeviceIDInHeader'
    get: 
      summary: Get user details
      description: return account details like email address, name etc
      responses:
        200:
          description: Fetched user details ok
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/request_code:
      post:
        summary: Send user an email to confirm token
        description: Send a one time use code to a user via email to confirm API token
        responses: 
            200:
                description: The customer has been emailed sucessfully. 
  /user/validate_code:
      post:
        summary: Submit code to confirm token validity
        description: Confirm a new token via sending a one time user code to a user via email
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            code: 
                                type: integer
                                example: 123456
                                description: The one time code that was emailed to the user to verify this device
                        example: 
                          code: 123456
        responses: 
            200:
                description: The token has been verified.
  /user/notifications:
    get:
      summary: Get notifications
      description: Get the current notification settings for this user
      responses: 
        200:
          description: Got the notifications successfully
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Notifications'
    put:
      summary: Update notifications
      description: Set the notification settings for this user
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Notifications'
      responses: 
        200:
          description: Set the notifications successfully
  /items:
    parameters:
        - $ref: '#/components/parameters/SortOrderParam'
        - $ref: '#/components/parameters/SortFieldParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SearchParam'
        - $ref: '#/components/parameters/DeviceIDInHeader'
    get:
      summary: 'Return the current mail held at Private Box for this user'
      responses:
        200:
          description: 'Mail items fetched ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    $ref: "#/components/schemas/ArrayOfItems"
                  current_page:
                    type: integer
                  first_page_url:
                    type: string
                  from: 
                    type: integer
                  last_page: 
                    type: integer
                  last_page_url: 
                    type: string
                  next_page_url: 
                    type: string
                  path:
                    type: string
                  per_page:
                    type: integer
                  prev_page_url: 
                    type: string
                  to: 
                    type: integer
                  total: 
                    type: integer
                  status_code: 
                    type: integer
                  status_message: 
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /items/sent:
    parameters:
        - $ref: '#/components/parameters/SortOrderParam'
        - $ref: '#/components/parameters/SortFieldParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SearchParam'
        - $ref: '#/components/parameters/DeviceIDInHeader'
    get:
      summary: 'Return the mail that has been sent by Private Box'
      responses:
        200:
          description: 'Sent items fetched ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        items:
                          $ref: "#/components/schemas/ArrayOfItems"
                        destination: 
                          $ref: "#/components/schemas/Address"
                        sent_date:
                          type: string
                          format: date
                          description: "Date item was sent (YYYY-MM-DD)"
                        tracking_number:
                          type: string
                          description: "Tracking number (if available)"
                        service:
                          $ref: '#/components/schemas/ServiceOption'
                        provider:
                          type: string
                          description: "The service provider (if available)"
                      example: 
                        - destination: 
                            id: 99281
                            address: 15 Beaumonts Way
                            address_detail: Unit 15
                            suburb: Manurewa
                            city: Auckland
                            post_code: 2102
                          send_date: '2022-03-01'
                          service: 
                            id: 1
                            name: Standard Post
                          provider: NZ Post
                          items: 
                            - id: 54661
                              weight: 802
                              type: Large Document
                              status: Arrived
                              scan_status: Queued
                              from:
                                text: CAMPING & CARAVANS MAG
                              to: Bugs Bunny
                            - id: 54662
                              weight: 1300
                              type: Parcel
                              status: Arrived
                              scan_status: Queued
                              from: 
                                text: AMAZON
                                name: Amazon
                              to: Doc. Whats Up
                            - id: 54662
                              weight: 23
                              type: Letter
                              from: 
                                text: ASB BANK, AUCKLAND
                                name: ASB
                              status: Arrived
                              scan_status: Completed
                              to: Bugs Bunny
                  current_page:
                    type: integer
                  first_page_url:
                    type: string
                  from: 
                    type: integer
                  last_page: 
                    type: integer
                  last_page_url: 
                    type: string
                  next_page_url: 
                    type: string
                  path:
                    type: string
                  per_page:
                    type: integer
                  prev_page_url: 
                    type: string
                  to: 
                    type: integer
                  total: 
                    type: integer
                  status_code: 
                    type: integer
                  status_message: 
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /items/scanned:
    get:
      summary: All items that have been successfully scanned
      parameters:
        - $ref: '#/components/parameters/SortOrderParam'
        - $ref: '#/components/parameters/SortFieldParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SearchParam'
        - $ref: '#/components/parameters/DeviceIDInHeader'
        - in: query
          name: id
          schema:
            type: integer            
          description: "ID of scanned item. Optional - if no value supplied all scanned mail items will be returned"
          required: false
      responses:
        200:
          description: 'Scanned items fetched ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ArrayOfScannedItems"
                  current_page:
                    type: integer
                  first_page_url:
                    type: string
                  from: 
                    type: integer
                  last_page: 
                    type: integer
                  last_page_url: 
                    type: string
                  next_page_url: 
                    type: string
                  path:
                    type: string
                  per_page:
                    type: integer
                  prev_page_url: 
                    type: string
                  to: 
                    type: integer
                  total: 
                    type: integer
                  status_code: 
                    type: integer
                  status_message: 
                    type: string
  /items/bin:
    get:
      summary: Items that have been queued for destruction or destroyed in last 7 days. 
      parameters:
        - $ref: '#/components/parameters/SortOrderParam'
        - $ref: '#/components/parameters/SortFieldParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SearchParam'
        - $ref: '#/components/parameters/DeviceIDInHeader'
        - in: query
          name: id
          schema:
            type: integer            
          description: "ID of item. Optional - if no value supplied all mail items in the bin will be returned"
          required: false
      responses:
        200:
          description: 'Items in bin fetched ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: 
                      type: object
                      properties:
                        item:
                          $ref: "#/components/schemas/Item"
                        destruction_date: 
                          type: string
                          format: date
                          description: The date the item was destroyed. Items without dates have not yet been processed. 
                      example: 
                        item: 
                          - id: 3213
                            from:
                              text: AMAZON
                            received_date: 2022-01-20
                            destruction_date: 2022-03-01
                          - id: 3214
                            from:
                              text: BOX 30, AUCKLAND
                            received_date: 2021-11-12
                            destruction_date: 2022-03-01
                          - id: 3215
                            from:
                              text: G PALMER
                            received_date: 2022-03-20
                            destruction_date: 2022-03-01
                          - id: 31238
                            from:
                              text: ASB
                            received_date: 2022-07-01
                  current_page:
                    type: integer
                  first_page_url:
                    type: string
                  from: 
                    type: integer
                  last_page: 
                    type: integer
                  last_page_url: 
                    type: string
                  next_page_url: 
                    type: string
                  path:
                    type: string
                  per_page:
                    type: integer
                  prev_page_url: 
                    type: string
                  to: 
                    type: integer
                  total: 
                    type: integer
                  status_code: 
                    type: integer
                  status_message: 
                    type: string
  /items/move:
    post: 
      summary: Move items between folders
      description: Move items between folders in the same mailbox. Please note - moving folders does not invoke auto scan rules but will include these items in the next auto forward (if present)
      parameters:
        - $ref: '#/components/parameters/DeviceIDInHeader'
      requestBody: 
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                folder_id:
                  type: integer
                  description: ID of the destination folder to move items to
                items: 
                  description: Item IDs to be moved
                  type: array
                  items: 
                    type: integer
              example: 
                folder_id: 3832
                items: 
                  - 56221
                  - 56222
                  - 56223
                  - 56224
      responses:
        200:
          description: Item(s) moved successfully
  /countries:
      get:
        summary: Get a list of countries 
        description: List of countries. Can be sorted by ISO, name or printable_name
        parameters:
          - name: sort_by_column
            in: query
            description: "Can sort by iso|name|printable_name. Default is printable_name."
            required: false
            schema:
              type: string
              enum: ['iso','name','printable_name']
              default: printable_name
        responses: 
          200:
            description: Retrived countries successfully
            content:
              application/json:
                schema:
                  type: array
                  items: 
                    $ref: '#/components/schemas/Country'
  /frequency:
      get:
        summary: Auto forward frequencies
        description: List of frequencies that can be used when setting up a auto forwarding rule
        responses: 
          200:
            description: The customer has been emailed sucessfully. 
            content:
              application/json:
                schema:
                  type: array
                  items: 
                    $ref: '#/components/schemas/Frequency'
  /mailboxes:
    parameters:
      - $ref: '#/components/parameters/DeviceIDInHeader'
    get:
      summary: Get list of mailbox(es) for this user
      description: Get mailbox info
      parameters:
        - name: id
          in: query
          description: "The mailbox ID (include to retrieve one mailbox) otherwise all mailboxes will be returned"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Successfully returned a list of mailbox(es)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MailBox"
  /mailboxes/{id}/folders:      
    get:
      summary: Get folders for a mailbox
      description: Get all folders that belong to this mail box
      parameters:
        - name: id
          in: path
          description: Mailbox ID
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/DeviceIDInHeader'
      responses:
        200:
          description: Successfully fetched mail folders for this mailbox
          content:
            application/json:
              schema:
                type: object
                properties:
                  mailbox:
                    $ref: "#/components/schemas/MailBox"
                  folders:
                    type: array
                    items:
                      $ref: "#/components/schemas/MailFolder"
                example:
                  mailbox: 
                    id: 1234
                    name: Suite 1234
                    type: Business
                  folders: 
                    - 
  /mailboxes/{id}/items:      
    get:
      summary: Get mail items for a mailbox
      description: Get all mail items that belong to this mail box
      parameters:
        - $ref: '#/components/parameters/SortOrderParam'
        - $ref: '#/components/parameters/SortFieldParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SearchParam'
        - $ref: '#/components/parameters/DeviceIDInHeader'
        - name: id
          in: path
          description: Mailbox ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successfully fetched mail items for this mailbox
          content:
            application/json:
              schema:
                type: object
                properties:
                  mailbox:
                    $ref: "#/components/schemas/MailBox"
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Item"       
                  page_info: 
                    $ref: '#/components/responses/ResultsResponse'
  /mailboxes/{id}/folders/{fid}/items:      
    get:
      summary: Get mail items for a folder
      description: Get all mail items that belong to this folder
      parameters:
        - $ref: '#/components/parameters/SortOrderParam'
        - $ref: '#/components/parameters/SortFieldParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SearchParam'
        - $ref: '#/components/parameters/DeviceIDInHeader'
        - name: id
          in: path
          description: Mailbox ID
          required: true
          schema:
            type: integer
        - name: fid
          in: path
          description: Mail folder ID
          required: true
          schema:
            type: integer            
      responses:
        200:
          description: Successfully fetched mail items for this folder
          content:
            application/json:
              schema:
                type: object
                properties:
                  mail_box: 
                    $ref: "#/components/schemas/MailBox"
                  folder: 
                    $ref: "#/components/schemas/MailFolder"
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Item"
                  page_info: 
                    $ref: '#/components/responses/ResultsResponse'
  /folders/{id}:
    put:
      summary: Edit a mail folder
      description: Update a single mail folders name, auto-scanning and auto-forwarding rules
      operationId: "EditMailFolder"
      parameters:
        - in: path
          name: id
          description: ID of the folder
          schema:
            type: integer
          required: true
        - $ref: '#/components/parameters/DeviceIDInHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailFolder'
      responses: 
        200:
          description: The folder has been updated successfully
  /order/scan/cost:
    get:
      summary: Retrieve (initial) price for scanning
      description: Manual scan requests are charged on a per item basis and a per page basis
      parameters:
        - in: query
          name: item_count
          description: The number of items to be scanned
          schema:
            type: integer
          required: false
        - $ref: '#/components/parameters/DeviceIDInHeader'
      responses:
        200:
          description: Manual scan price retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  per_item_cost: 
                    description: Charge per item
                    type: number
                    format: float
                  per_page_cost:
                    description: Charge per page
                    type: number
                    format: float
                  notes:
                    description: Information about how pricing is applied
                    type: string
                  total:
                    description: If the number of items is passed in then the calculated total will be returned
  /order/scan:
    post: 
      summary: Place a scan order
      description: Request a one or more items to be scanned. Once the order is placed the customers account will be charged and the items will be queued for scanning. 
      parameters:
        - $ref: '#/components/parameters/DeviceIDInHeader'
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: integer
                    description: An array of Item IDs
                destroy: 
                  type: boolean
                  description: Set to true if the item should be destroyed after a successful scan
      responses: 
        200: 
          description: Placed scan order successfully
  /order/destroy:
    post: 
      summary: Place a destroy order
      description: Request a one or more items to be destroyed. Once the order the items will be queued for destruction. 
      parameters:
        - $ref: '#/components/parameters/DeviceIDInHeader'
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              type: array
              items:
                type: integer
                description: An array of Item IDs
      responses: 
        200: 
          description: Placed destroy order successfully
  /order/collect/cost:
    get: 
      summary: Get collection cost estimate
      description: Get an estimated cost to collect item(s)
      parameters:
        - in: query
          name: id
          description: The ID of items to be collected
          schema:
            type: array
            items: 
              type: integer
              description: An array of Item IDs
          required: true
        - in: query
          name: pbox_location
          description: If the items are to be collected from a Private Box office
          schema:
            type: boolean
            description: Whether or not the collection location is a Private Box branch. Optional. Default is false. 
          required: false
        - $ref: '#/components/parameters/DeviceIDInHeader'
      responses:
        200:
          description: Collect price estimate retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  cost_min: 
                    description: The minimum charge to collect this item
                    type: number
                    format: float
                  cost_max:
                    description: The maximum charge to collect this item
                    type: number
                    format: float
                  notes:
                    description: Information about how pricing is applied
                    type: string
                  estimate:
                    description: Our best guess at how much it will cost to collect these items
                    type: number
                    format: float
                  qualifies_for_free_sending:
                    description: Some items may qualify for free sending
                    type: boolean
  /order/collect:
    post: 
      summary: Place a collection order
      description: Request a one or more items to be collected. Will place these items in a collect queue for processing by our mail team.  
      parameters:
        - $ref: '#/components/parameters/DeviceIDInHeader'
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: integer
                    description: An array of Item IDs
                collect_id: 
                  type: integer
                  description: Collect ID of the collect location
      responses: 
        200: 
          description: Placed collect order successfully
  /order/collect/locations:
    get: 
      summary: Get list of collect locations
      description: Return a list where a customers parcels can be collected from. 
      parameters:
        - $ref: '#/components/parameters/SortOrderParam'
        - $ref: '#/components/parameters/SortFieldParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/DeviceIDInHeader'
      responses: 
        200: 
          description: Returned a list of collect locations successfully
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  locations:
                    type: array
                    items: 
                      $ref: '#/components/schemas/CollectLocation'
                  page_info: 
                    $ref: '#/components/responses/ResultsResponse'
  /order/send/cost: 
    post: 
      summary: Get estimate for sending 
      description: Depending on the item types and destination country, return a list of estimated costs associated with each service type
      parameters:
        - $ref: '#/components/parameters/DeviceIDInHeader'
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: integer
                    description: An array of Item IDs
                country: 
                  type: string
                  description: ISO (2 charge) code for destination country
      responses:
        200: 
          description: Successfully obtained an estimate to send items
          content: 
            application/json: 
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    service:
                      $ref: '#/components/schemas/ServiceOption'
                    estimate_min: 
                      description: The minimum the customer should expect to spend to have these items sent using this service
                      type: number
                      format: currency
                    estimate_max: 
                      description: The maximum the customer should expect to spend to have these items sent using this service
                      type: number
                      format: currency
                    estimate: 
                      description: The approximate price the customer should expect to spend to have these items sent using this service. Note - if the estimate is empty then you should use estimate_min and estimate_max to give the customer a range of the possible cost. 
                      type: number
                      format: currency
  /order/send/info:
    get: 
      summary: Get any current notices regarding sending
      description: This info will show the latest details in regards to mail delays and/or any other useful info regarding sending mail
      parameters:
        - $ref: '#/components/parameters/DeviceIDInHeader'
      responses: 
        200: 
          description: Got send info ok
          content: 
            application/json: 
              schema:
                type: object
                properties:
                  text: 
                    type: string
  /order/send:
    post: 
      summary: Send mail items
      description: Send items to selected country using the selected service
      parameters:
        - $ref: '#/components/parameters/DeviceIDInHeader'
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: integer
                    description: An array of Item IDs
                address:
                  $ref: '#/components/schemas/Address'
                service_id:
                  type: integer
                  description: The ID of the service we should use to send these items
                add_new: 
                  type: boolean
                  description: If new mail items arrive prior to our team processing these items, should we automatically include them in this sending bundle (even though this is likely to increase the cost). Default is true. 
              required: 
                - items
                - address_id
                - service_id
      responses:
        200: 
          description: Successfully obtained an estimate to send items
          content: 
            application/json: 
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    service:
                      $ref: '#/components/schemas/ServiceOption'
                    estimate_min: 
                      description: The minimum the customer should expect to spend to have these items sent using this service
                      type: number
                      format: currency
                    estimate_max: 
                      description: The maximum the customer should expect to spend to have these items sent using this service
                      type: number
                      format: currency
                    estimate: 
                      description: The approximate price the customer should expect to spend to have these items sent using this service. Note - if the estimate is empty then you should use estimate_min and estimate_max to give the customer a range of the possible cost. 
                      type: number
                      format: currency
                    address_verified: 
                      type: boolean
                      description: We were able to verify this destination address succesfully. 
  /addresses:
    get:
      summary: Get previously used addresses by this account
      description: Returns a list of all previous addresses this account has sent mail to. By default only the last 12 months of addresses are returned
      parameters:
        - $ref: '#/components/parameters/DeviceIDInHeader'
        - in: query
          name: all
          schema: 
            type: boolean
            default: false
          description: Return all previously used addresses. If set to false then only the last 12 months are returned (default)
      responses:
        200: 
          description: Returned a list of addresses ok
          content: 
            application/json:
              schema:
                type: object
                properties:
                  addresses:
                    type: array
                    items: 
                      $ref: '#/components/schemas/Address'